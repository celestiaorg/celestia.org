2:I[39275,[],""]
4:I[61343,[],""]
6:I[84080,["6273","static/chunks/6273-9b869ad12a2b57df.js","8173","static/chunks/8173-60cd902d85ccd6f9.js","1419","static/chunks/1419-96dbd05ba3e11cab.js","9833","static/chunks/9833-a647757c86e08c25.js","1530","static/chunks/1530-c0af8f684ff4be67.js","3185","static/chunks/app/layout-9792251f8eb4a825.js"],""]
7:I[49718,["6273","static/chunks/6273-9b869ad12a2b57df.js","8173","static/chunks/8173-60cd902d85ccd6f9.js","1419","static/chunks/1419-96dbd05ba3e11cab.js","9833","static/chunks/9833-a647757c86e08c25.js","1530","static/chunks/1530-c0af8f684ff4be67.js","3185","static/chunks/app/layout-9792251f8eb4a825.js"],"BannerProvider"]
8:I[68300,["6273","static/chunks/6273-9b869ad12a2b57df.js","8173","static/chunks/8173-60cd902d85ccd6f9.js","1419","static/chunks/1419-96dbd05ba3e11cab.js","9833","static/chunks/9833-a647757c86e08c25.js","1530","static/chunks/1530-c0af8f684ff4be67.js","3185","static/chunks/app/layout-9792251f8eb4a825.js"],"default"]
9:I[53802,["6273","static/chunks/6273-9b869ad12a2b57df.js","8173","static/chunks/8173-60cd902d85ccd6f9.js","1419","static/chunks/1419-96dbd05ba3e11cab.js","9833","static/chunks/9833-a647757c86e08c25.js","1530","static/chunks/1530-c0af8f684ff4be67.js","3185","static/chunks/app/layout-9792251f8eb4a825.js"],"default"]
a:"$Sreact.suspense"
b:I[85237,["6273","static/chunks/6273-9b869ad12a2b57df.js","8173","static/chunks/8173-60cd902d85ccd6f9.js","1419","static/chunks/1419-96dbd05ba3e11cab.js","9833","static/chunks/9833-a647757c86e08c25.js","1530","static/chunks/1530-c0af8f684ff4be67.js","3185","static/chunks/app/layout-9792251f8eb4a825.js"],"default"]
c:I[26694,["6273","static/chunks/6273-9b869ad12a2b57df.js","4116","static/chunks/app/glossary/layout-35be55b1a4f1f268.js"],"default"]
d:I[14050,["6273","static/chunks/6273-9b869ad12a2b57df.js","8173","static/chunks/8173-60cd902d85ccd6f9.js","1419","static/chunks/1419-96dbd05ba3e11cab.js","9268","static/chunks/9268-ddcaa62280f270cc.js","9833","static/chunks/9833-a647757c86e08c25.js","8750","static/chunks/8750-3cccfa656f840e79.js","1931","static/chunks/app/page-5ae5d46437e6e94f.js"],"Body"]
e:I[77334,["6273","static/chunks/6273-9b869ad12a2b57df.js","8173","static/chunks/8173-60cd902d85ccd6f9.js","1419","static/chunks/1419-96dbd05ba3e11cab.js","9268","static/chunks/9268-ddcaa62280f270cc.js","9833","static/chunks/9833-a647757c86e08c25.js","8750","static/chunks/8750-3cccfa656f840e79.js","1931","static/chunks/app/page-5ae5d46437e6e94f.js"],"default"]
f:I[63141,["6273","static/chunks/6273-9b869ad12a2b57df.js","8173","static/chunks/8173-60cd902d85ccd6f9.js","1419","static/chunks/1419-96dbd05ba3e11cab.js","9833","static/chunks/9833-a647757c86e08c25.js","1530","static/chunks/1530-c0af8f684ff4be67.js","3185","static/chunks/app/layout-9792251f8eb4a825.js"],"default"]
3:["slug","settlement","d"]
0:["z0naw86vCoUen4pQe6waQ",[[["",{"children":["glossary",{"children":[["slug","settlement","d"],{"children":["__PAGE__?{\"slug\":\"settlement\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["glossary",{"children":[["slug","settlement","d"],{"children":["__PAGE__",{},[["$L1","$undefined"],null],null]},["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","glossary","children","$3","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},["$L5",null],null]},[["$","html",null,{"lang":"en","children":[["$","head",null,{"children":[["$","$L6",null,{"async":true,"defer":true,"data-api":"$undefined","data-domain":"celestia.org","data-exclude":"$undefined","src":"https://plausible.celestia.org/js/plausible.js","integrity":"$undefined","crossOrigin":"$undefined"}],["$","$L6",null,{"id":"next-plausible-init","dangerouslySetInnerHTML":{"__html":"window.plausible = window.plausible || function() { (window.plausible.q = window.plausible.q || []).push(arguments) }"},"nonce":"$undefined"}],"$undefined"]}],["$","body",null,{"className":"text-black","children":["$","$L7",null,{"children":["$","$L8",null,{"children":[["$","$L9",null,{}],["$","main",null,{"id":"main-content","children":["$","$a",null,{"fallback":["$","$Lb",null,{}],"children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","$Lc",null,{"title":"404","blurbTitle":"Page not found","blurbCopy":"The page you're looking for doesn't exist or has been moved."}],["$","div",null,{"id":"tertiaryPageContainer","className":"w-full max-w-[1265px] mx-auto px-4 md:px-10 ","children":["$","div",null,{"className":"block lg:flex flex-row-reverse lg:gap-20 items-stretch","children":[["$","div",null,{"className":"w-full lg:w-1/4"}],["$","div",null,{"className":"w-full lg:w-3/4 py-10 lg:py-20","children":["$","div",null,{"className":"flex flex-col items-center justify-center py-10 lg:py-24","children":[["$","$Ld",null,{"className":"mb-8 text-center","children":"Let's get you back on track. Check out these helpful links:"}],["$","div",null,{"className":"flex flex-col gap-4 sm:flex-row","children":[["$","$Le",null,{"className":"group relative block\n\t\t\t\tleading-none text-center uppercase rounded-full block no-underline transform transition-all duration-150 \n\t\t\t\ttext-xs px-5 py-3\n\t\t\t\tbg-black text-white border-white hover:text-black hover:border-black transition-all duration-300\n\t\t\t\tborder \n\t\t\t\tuppercase\n\t\t\t","onClick":null,"href":"/","self":null,"children":[["$","div",null,{"className":"absolute inset-0 overflow-hidden rounded-full","children":["$","div",null,{"className":"absolute w-1/2 h-full top-full left-1/2 -translate-x-1/2 block rounded-full transition-all duration-200 group-hover:top-0 group-hover:w-full group-hover:scale-125 bg-white"}]}],["$","div",null,{"className":"relative z-10","children":"Go home"}]]}],["$","$Le",null,{"className":"group relative \n        leading-none text-center uppercase rounded-full block no-underline transform transition-all duration-150 \n        text-xs px-5 py-3\n        text-purple-dark border-purple-dark hover:text-white transition-all duration-300\n        border \n        uppercase\n        ","onClick":null,"href":"/build","self":null,"children":[["$","div",null,{"className":"absolute inset-0 overflow-hidden rounded-full","children":["$","div",null,{"className":"absolute w-1/2 h-full top-full left-1/2 -translate-x-1/2 block rounded-full transition-all duration-200 group-hover:top-0 group-hover:w-full group-hover:scale-125 bg-purple"}]}],["$","div",null,{"className":"relative z-10","children":"Start building"}]]}]]}]]}]}]]}]}]],"notFoundStyles":[],"styles":null}]}]}],["$","$Lf",null,{}]]}]}]}]]}],null],null],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/51dd190d310e50d7.css","precedence":"next","crossOrigin":"$undefined"}]],"$L10"]]]]
11:I[33322,["6273","static/chunks/6273-9b869ad12a2b57df.js","4116","static/chunks/app/glossary/layout-35be55b1a4f1f268.js"],"default"]
12:T46c,
A mechanism employed in PoS blockchains that is used to deter and punish malicious behavior. Slashing was originally conceived as a method to solve the nothing at stake problem, which presented the problem that validators weren’t restricted by the number of forks they could vote on – unlike in PoW where miners only have a limited amount of hash power to dedicate to forks.

To become a validator, a node is typically required to stake a minimum amount of the network’s native token. If the validator is caught double-voting or voting for any competing fork other than the canonical chain, the validator's stake is reduced (slashed). The degree by which validators are slashed varies by network and the severity of the malicious behavior.

Slashing can also occur for behavior that is deemed dishonest despite any lack of malicious intent. Dishonest behavior can include going offline or missing network duties. Slashing as a deterrent for dishonest behavior is important for blockchains that employ BFT-like consensus mechanisms, where ≥1/3 of voting power can halt the network if they are offline or refuse to vote.5:[["$","$Lc",null,{"title":"Glossary","blurbTitle":"Explore our extensive glossary. Enhance your understanding of terminology."}],["$","$L11",null,{"glossaryData":[{"title":"Block header","description":"The header of a block contains a list of relevant metadata.","content":"\r\nThe header of a block that contains a list of relevant metadata. This typically includes a Merkle root of the transactions in the block body, the hash of the previous block, the block height, and the timestamp, among others. The contents of the block header will also vary by sybil resistance mechanism (PoW or PoS) and by the specifications of the individual blockchain.\r\n","slug":"block-header"},{"title":"Block producer","description":"A full node that is responsible for producing blocks.","content":"\nA full node that is responsible for producing blocks. In most blockchains, miners or validators are responsible for producing and proposing blocks when they are the leader. For rollups, block producers, also known as sequencers or operators, only build blocks with transactions, which they publish to a separate blockchain for consensus and data availability.","slug":"block-producer"},{"title":"Block space","description":"The capacity of each block.","content":"\nThe capacity of each block. The amount of block space a blockchain has determines its throughput. Blockchains that suffer from high fees occur because demand for block space exceeds supply.","slug":"block-space"},{"title":"Blockchain cluster","description":"A group of blockchains that can communicate with each other in a trust-minimized way.","content":"\nA group of blockchains that can communicate with each other in a trust-minimized way. Trust-minimized communication can be facilitated by fraud or validity proofs. Chains that can’t communicate in a trust-minimized way are in separate clusters that rely on trust-based communication.\n\nFor example, Ethereum and its rollups are a cluster of chains, and standalone layer 1s, such as Polygon, each sit in their own cluster.\n\nRead more about the concept of [clusters](https://blog.celestia.org/clusters/).","slug":"blockchain-cluster"},{"title":"Composability","description":"The ability for applications on a blockchain to read and write state to each other.","content":"\r\nThe ability for applications on a blockchain to read and write state to each other. Composability allows applications to coordinate with and build on top of one another such that it enables an ecosystem of interconnected applications.\r\n\r\nFor example, an application that automates liquidity strategies on Uniswap requires it to be reading and writing the state of Uniswap’s contracts.","slug":"composability"},{"title":"Consensus algorithm","description":"A consensus algorithm is a set of rules that blockchains use to determine how nodes produce new blocks and agree to finalize them.","content":"\r\nA consensus algorithm is a set of rules that blockchains use to determine how nodes produce new blocks and agree to finalize them. Examples of blockchain consensus algorithms include Tendermint, commonly used by Cosmos chains, Casper, used by Ethereum and Nakamoto consensus used by Bitcoin. Proof of Work and Proof of Stake are commonly confused as consensus algorithms, when they are actually sybil resistance mechanisms.\r\n","slug":"consensus-algorithm"},{"title":"Consensus layer","description":"A modular blockchain that provides transaction ordering for other modular blockchains, like rollups.","content":"\r\nA consensus layer refers to a modular blockchain that provides transaction ordering for other modular blockchains, like [rollups](https://celestia.org/glossary/rollup). Modular blockchains that are a consensus layer may also provide data availability, like Celestia. ‘Consensus layer’ may also refer to the [consensus mechanism](https://celestia.org/glossary/consensus-algorithm) of a monolithic blockchain.\r\n","slug":"consensus-layer"},{"title":"Consensus","description":"A function of modular blockchains where the ordering of transactions is agreed upon by a set of validators.","content":"\r\nConsensus refers to a function of modular blockchains where the ordering of transactions is agreed upon by a set of [validators](https://celestia.org/glossary/validator). To agree on the order of transactions in a block, validators follow a [consensus algorithm](https://celestia.org/glossary/consensus-algorithm).\r\n","slug":"consensus"},{"title":"Cosmos SDK","description":"The Cosmos SDK is a development kit for building PoS layer 1 blockchains with Tendermint as the consensus mechanism.","content":"\r\nThe [Cosmos SDK](https://v1.cosmos.network/sdk) is a development kit for building applications to run on top of Tendermint consensus as a PoS layer 1 blockchain. The SDK provides a framework with which the business logic of new L1 blockchains can easily be created by separating the software components into distinct modules. Separation of components through modules enables flexibility and customization during the development process.\r\n","slug":"cosmos-sdk"},{"title":"Cross-chain interoperability","description":"The ability for separate blockchains to communicate and interact with each other.","content":"\r\nThe ability for separate blockchains to communicate and interact with each other. Since blockchain interoperability has proven difficult, many pieces of infrastructure to support interoperability have arisen such as bridges, as well as blockchain architectures that are fundamentally designed to have interoperable chains, like Cosmos and their IBC network.\r\n","slug":"cross-chain-interoperability"},{"title":"DA","description":"DA stands for Data Availability.","content":"\r\nDA stands for [Data Availability](https://celestia.org/glossary/data-availability).\r\n","slug":"da"},{"title":"DAC","description":"DAC stands for Data Availability Committee.","content":"\r\nDAC stands for [Data Availability Committee](https://celestia.org/glossary/data-availability-committee).\r\n","slug":"dac"},{"title":"DAS","description":"DAS stands for Data Availability Sampling.","content":"\r\nDAS stands for [Data Availability Sampling](https://celestia.org/glossary/data-availability-sampling).\r\n","slug":"das"},{"title":"Data availability committee","description":"A data availability committee (DAC) is a permissioned group of nodes responsible for providing data availability to a blockchain.","content":"\r\nA data availability committee (DAC) is a permissioned group of nodes responsible for providing data availability to a blockchain.DAC’s are an insecure source of data availability because they make an honest majority assumption and don’t have any stake to slash if a data withholding attack is attempted. Data availability committees are primarily used to provide a cheap and less secure source of data availability to L2s.\r\n","slug":"data-availability-committee"},{"title":"Data availability layer","description":"A blockchain that provides for other types of chains, like rollups.","content":"\r\nA data availability layer refers to a blockchain that provides [data availability](https://celestia.org/glossary/data-availability) for other types of chains, like [rollups](https://celestia.org/glossary/rollup). In the modular ecosystem, data availability layers make use of technologies like [data availability sampling](https://celestia.org/glossary/data-availability-sampling) to provide scalable and trust-minimized data availability.\r\n","slug":"data-availability-layer"},{"title":"Data availability sampling","description":"A technique in which nodes can verify that data is available for a block without having to download the entire block, formerly known as data availability proofs.","content":"\r\nData availability sampling is a mechanism for light nodes to verify data availability without having to download all data for a block. Data availability sampling (DAS) works by having light nodes conduct multiple rounds of random sampling for small portions of block data. As a light node completes more rounds of sampling for block data, it increases its confidence that data is available. Once the light node successfully reaches a predetermined confidence level (e.g. 99%) it will consider the block data as available.\r\n\r\nWhen implemented in blockchain designs like Celestia, data availability sampling enables light nodes to contribute to both the security and throughput of the network with significantly cheaper hardware than that of full nodes.","slug":"data-availability-sampling"},{"title":"Data availability","description":"The condition of whether or not transaction data was made available for nodes to download, when a block was proposed.","content":"\r\nData availability answers the question, has this data been published? Specifically, a node will verify data availability when it receives a new block that is getting added to the chain. The node will attempt to download all the transaction data for the new block to verify availability. If the node can download all the transaction data, then it successfully verified data availability, proving that the block data was actually published to the network.\r\n\r\nFor an overview on data availability, read [What is Data Availability?](https://coinmarketcap.com/alexandria/article/what-is-data-availability)","slug":"data-availability"},{"title":"Data throughput","description":"A measurement of the data capacity of a blockchain. Data throughput is calculated by the amount of data that a blockchain can process, measured in kb/s or mb/s.","content":"\r\nA measurement of the data capacity of a blockchain. Data throughput is calculated by the amount of data that a blockchain can process, measured in kb/s or mb/s. For example, consider a blockchain that has a block size of 10MB and a block time of 20 seconds. The data throughput of the blockchain would be 0.5MB/s. Data throughput is most relevant to data availability layers because their primary job is to provide a high capacity for data.\r\n","slug":"data-throughput"},{"title":"Data withholding attack","description":"A type of attack that occurs when a block producer proposes a new block but does not share the underlying transaction data that was used to create the block.","content":"\r\nA type of attack that occurs when a block producer proposes a new block but does not share the underlying transaction data that was used to create the block. Blockchains typically ensure proposed blocks are available by requiring validators to download the entire block and vote on whether the block was valid or not. If the majority of the validator set is malicious and votes that a block with unavailable data is valid, it will be added to the chain but rejected by full nodes.\r\n\r\nWhile full nodes can verify that the block is invalid by fully downloading it, light clients have no such mechanism as they only download the block header. Techniques such as data availability sampling can provide light clients with a method to verify data availability without having to download the entire block, allowing them to retain minimal resource requirements.","slug":"data-withholding-attack"},{"title":"Dispute resolution","description":"The handling and resolution of disputes, commonly used as a term in relation to optimistic rollups and their fraud proof mechanism.","content":"\r\nThe handling and resolution of disputes, commonly used in relation to optimistic rollups and their fraud proof mechanism. Optimistic rollups submit transactions to an L1 under the assumption they are correct. If an eligible entity disagrees with the validity of the rollup’s transactions, they can issue a dispute and generate a fraud proof.\r\n\r\nThe dispute is considered resolved once the fraud proof has been verified, any offending parties are punished, and any required changes of the rollup’s chain are complete. The dispute resolution is said to be external if the process occurs on the L1 instead of on the rollup.","slug":"dispute-resolution"},{"title":"EE","description":"EE stands for Execution Environment.","content":"\r\nEE stands for [Execution Environment](https://celestia.org/glossary/execution-environment).\r\n","slug":"ee"},{"title":"Execution environment","description":"The virtual environment within a blockchain where transactions are processed, and accounts and smart contracts live.","content":"\r\nThe virtual environment within a blockchain where transactions are processed, and accounts and smart contracts live. The execution environment is also responsible for determining the rules that dictate how each block updates the state, known as a state transition function.\r\n\r\nAll blockchains have execution environments, however their functionality may vary based on how they are implemented. For example, the Ethereum virtual machine (EVM) is Ethereum’s native execution environment, where Ethereum transactions are executed, and accounts and smart contracts live. The EVM has also been implemented by other blockchains which allows smart contracts to be written in EVM-based programming languages, such as solidity.","slug":"execution-environment"},{"title":"Execution layer","description":"A type of modular blockchain whose primary job is hosting smart contracts and executing transactions.","content":"\r\nAn execution layer is a type of modular blockchain whose primary job is hosting smart contracts and executing transactions. A common example of an execution layer is a [rollup](https://celestia.org/glossary/rollup). Execution layers utilize one or multiple other modular blockchains to fulfill any of the following functions: [settlement](https://celestia.org/glossary/settlement), [consensus](https://celestia.org/glossary/consensus), or [data availability](https://celestia.org/glossary/data-availability).\r\n\r\nAn execution layer may also refer to the execution environment of a monolithic blockchain.\r\n","slug":"execution-layer"},{"title":"Execution","description":"A function of modular blockchains where transactions are executed and the new state of the chain is determined.","content":"\r\nExecution refers to a function of modular blockchains where transactions are executed and the new state of the chain is determined.","slug":"execution"},{"title":"Fee market","description":"A type of market that blockchains implement to prevent malicious actors from spamming the network.","content":"\r\nA type of market that blockchains implement to prevent malicious actors from spamming the network. Fee markets typically utilize an auction mechanism, where users can specify their transaction fee and bid to have their transaction included in the next block. Fee markets are most noticeable for blockchains that experience high fees where demand exceeds capacity, and users are forced to increasingly bid up their transaction fees to be included in a block.","slug":"fee-market"},{"title":"Fork choice rule","description":"An algorithm that nodes use to correctly identify and follow the canonical chain.","content":"\r\nAn algorithm that nodes use to correctly identify and follow the canonical chain. In Nakamoto consensus, the consensus mechanism that Bitcoin uses, nodes follow the chain that has the most total difficulty - the most work put towards mining it. In Tendermint, the consensus mechanism used by Cosmos chains, nodes follow the chain that has valid blocks signed by ⅔ of the stake.","slug":"fork-choice-rule"},{"title":"Fork","description":"A software upgrade that causes the blockchain to split into two chains that may or may not be compatible with each other.","content":"\r\nA software upgrade that causes a blockchain to split into two chains that may or may not be compatible with each other. Forks can also occur when there is a temporary split in the chain, such as in proof of work.","slug":"fork"},{"title":"Full node","description":"A type of node that fully verifies a blockchain.","content":"\r\nA type of node that fully verifies a blockchain. To fully verify a block, at minimum, a full node must download the block’s data and check that it has consensus. If full nodes are required to ensure that the transactions are valid, they must also re-execute them.","slug":"full-node"},{"title":"Honest majority assumption","description":"The assumption that a majority of blockchain participants (such as the validator set) are honest and follow the rules of the protocol.","content":"\r\nThe assumption that a majority of blockchain participants (such as the validator set) are honest and follow the rules of the protocol. If a majority of participants are dishonest, attacks can be made that are within the rules of the protocol but cause negative effects.\r\n\r\nHonest majority assumptions can come in many forms. For example, light clients make an honest majority assumption about state validity because they don't verify transactions. If a majority of validators are dishonest and create invalid blocks, light clients can't verify that the blocks are invalid because from their perspective the blocks received consensus from a majority of the validator set.","slug":"honest-majority-assumption"},{"title":"Honest minority assumption","description":"The assumption that only a minority of blockchain participants are honest and follow the rules of the protocol.","content":"\r\nThe assumption that only a minority of blockchain participants are honest and follow the rules of the protocol. If a certain majority of participants are dishonest, attacks can be made that are within the rules of the protocol but cause negative effects.\r\n\r\nHonest minority assumptions can come in multiple forms, such as a 1-of-N assumption where only a single honest participant is required to be honest for the blockchain to hold a guarantee. For example, optimistic rollup users and nodes require a 1-of-N assumption for safety as at least one honest full node is required to monitor the rollup and submit fraud proofs in the event of fraud.","slug":"honest-minority-assumption"},{"title":"Inter-cluster communication","description":"Communication that occurs between blockchains that are in different clusters.","content":"\r\nCommunication that occurs between blockchains that are in different clusters. Since inter-cluster communication involves bridges that rely on an honest majority assumption to ensure that funds can’t be stolen, communication can’t be trust-minimized. The Ethereum-Polygon bridge is an example of inter-cluster communication because 2/3 of a committee is required to sign off on blocks.","slug":"inter-cluster-communication"},{"title":"Intra-cluster communication","description":"Communication that occurs between blockchains that are in the same clusters.","content":"\r\nCommunication that occurs between blockchains that are in the same cluster. Since these blockchains can rely on bridges that don’t require an honest majority assumption to ensure that funds can’t be stolen, they can communicate in a trust-minimized way.","slug":"intra-cluster-communication"},{"title":"ISR","description":"ISR stands for Intermediate State Root.","content":"\r\nISR stands for Intermediate State Root.\r\n","slug":"isr"},{"title":"Light client","description":"A type of node that only downloads and verifies block headers, relying on an honest majority assumption that the state of the chain indicated by the block header is valid.","content":"\r\nA type of node that only downloads and verifies block headers, relying on an honest majority assumption that the state of the chain indicated by the block header is valid.\r\n\r\nSince light clients aren’t required to download and execute transactions like full nodes, they are able to run on considerably cheaper hardware, at the expense of weaker security guarantees.\r\n\r\nHowever, Celestia light clients (known as light nodes) do not make an honest majority assumption for state validity because they can also verify the body of the block through data availability sampling.","slug":"light-client"},{"title":"Light node","description":"In Celestia, a light node is a type of node that verifies block headers and does data availability sampling.","content":"\r\nIn Celestia, a light node is a type of node that verifies block headers and does [data availability sampling](https://celestia.org/glossary/data-availability-sampling). Data availability sampling gives Celestia light nodes increased security compared to typical [light clients](https://celestia.org/glossary/light-client) because it lets them detect invalid blocks that have had [data withheld](https://celestia.org/glossary/data-withholding-attack) by block producers.\r\n\r\nSince light nodes don’t download all block data or execute transactions, they can run on [considerably cheaper hardware](https://docs.celestia.org/how-to-guides/light-node) than full nodes.\r\n","slug":"light-node"},{"title":"Liveness","description":"Liveness is a property of blockchains where validators produce new blocks and successfully finalize transactions.","content":"\r\nLiveness is a property of blockchains where validators produce new blocks and successfully finalize transactions. In the case where a blockchain stops producing blocks, it is said to have halted and had a liveness failure. An example of a liveness failure would be if ⅓ of stake in a Tendermint chain stops signing new blocks so no new blocks can get finalized. Simply put, liveness should guarantee that something good eventually happens.","slug":"liveness"},{"title":"Modular blockchain","description":"A type of blockchain that specializes in one or two tasks, rather than all of them.","content":"\r\nModular blockchains are specialists that only perform one or two functions. The functions that modular blockchains can specialize in are:\r\n\r\n1. [Execution](https://celestia.org/glossary/execution)\r\n2. [Settlement](https://celestia.org/glossary/settlement)\r\n3. [Consensus](https://celestia.org/glossary/consensus)\r\n4. [Data availability](https://celestia.org/glossary/data-availability)\r\n\r\nModular chains don’t sit alone, though. Multiple of them combine to perform all the tasks a monolithic chain does by itself. This combination of chains is what we call a [modular stack](https://celestia.org/glossary/modular-stack).\r\n\r\nFor example, Celestia is a modular blockchain that specializes in providing consensus and data availability for other types of chains.\r\n","slug":"modular-blockchain"},{"title":"Modular stack","description":"A combination of multiple modular blockchains.","content":"\r\nA modular stack is a combination of multiple modular blockchains. Multiple different types of modular stacks are possible because of how modular blockchains can be customized and combined with each other. Though, a modular stack must be made up of all functions.\r\n\r\nVisit [this Learn Modular article](/learn/beginners/the-modular-stack) to learn more about the modular stack.\r\n","slug":"modular-stack"},{"title":"Monolithic blockchain","description":"A type of blockchain that performs all tasks by itself.","content":"\r\nMonolithic blockchains are generalists that perform all functions by themselves. This is the opposite of [modular blockchains](https://celestia.org/glossary/modular-blockchain), which specialize and outsource the remaining functions to other modular chains.\r\n","slug":"monolithic-blockchain"},{"title":"Namespaced Merkle Tree","description":"A Namespaced Merkle Tree (NMT) is a type of binary Merkle tree where each node in the tree is tagged by the minimum and maximum namespace of their children.","content":"\r\nA Namespaced Merkle Tree (NMT) is a type of binary Merkle tree where each node in the tree is tagged by the minimum and maximum namespace of their children. The leaves in the tree are ordered by the namespace identifiers of the messages. This enables Merkle proofs of inclusion to be created that prove to a verifier all elements of the tree of a specific namespace have been included. Celestia uses an NMT to make it easy to prove inclusion of data for rollups.","slug":"namespaced-merkle-tree"},{"title":"NMT","description":"NMT stands for Namespaced Merkle Tree.","content":"\r\nNMT stands for [Namespaced Merkle Tree](https://docs.celestia.org/learn/how-celestia-works/data-availability-layer#namespaced-merkle-trees-nmts).\r\n","slug":"nmt"},{"title":"Node","description":"A node is a device that participates in a blockchain protocol by running its software.","content":"\r\nA node is a device that participates in a blockchain protocol by running its software. Blockchains typically have multiple different node types that carry out different tasks. Some of those tasks include sending and receiving transactions, storing blocks, and participating in consensus.","slug":"node"},{"title":"Off-chain data availability","description":"Off-chain data availability occurs when an L2 publishes its transaction data somewhere separate from the L1 it settles on.","content":"\r\nOff-chain data availability occurs when an L2 publishes its transaction data somewhere separate from the L1 it settles on. For example, if an L2s settles to Ethereum but publishes its data to Celestia, it is using Celestia for off-chain data availability. If that L2 is settling and publishing its data to Ethereum, it is using on-chain data availability. L2’s that use on-chain data availability are called rollups while L2’s that use off-chain data availability are called validiums or plasma.","slug":"off-chain-data-availability"},{"title":"On-chain data availability","description":"On-chain data availability occurs when an L2 publishes its transaction data to its designated L1.","content":"\r\nOn-chain data availability occurs when an L2 publishes its transaction data to its designated L1. For example, a Celestia L2 that publishes its transaction data to Celestia is using on-chain data availability. If that Celestia L2 publishes its transaction data somewhere other than Celestia, it is using off-chain data availability. L2’s that use on-chain data availability are called rollups while L2’s that use off-chain data availability are called validiums or plasma.","slug":"on-chain-data-availability"},{"title":"Optimistic rollup","description":"A type of rollup that posts its blocks to a separate chain without any cryptographic proofs that attest to their validity.","content":"\r\nA type of rollup that posts its blocks to a parent chain without any cryptographic proofs that attest to their validity. The parent chain receives the block with the corresponding signatures and optimistically assumes the transactions are correct.\r\n\r\nIf a block is suspected to be invalid, a dispute window is provided where the blocks are open to be challenged. If a block is challenged, a fraud proof will be used to verify whether it is invalid. Once the dispute window has closed, the block is considered final and no new challenges can be made.\r\n\r\nRead more about [optimistic rollups](https://coinmarketcap.com/alexandria/article/optimistic-rollups-for-the-rest-of-us/).","slug":"optimistic-rollup"},{"title":"ORU","description":"ORU stands for Optimistic Rollup.","content":"\r\nORU stands for [Optimistic Rollup](https://celestia.org/glossary/optimistic-rollup).\r\n","slug":"oru"},{"title":"PayForData","description":"A type of transaction, submitting a payload of arbitrary bytes (like a serialized block), paying for the amount of block space that the submitted data takes up.","content":"\r\nA type of transaction, submitting a payload of arbitrary bytes (like a serialized block), paying for the amount of block space that the submitted data takes up.\r\n\r\nPayForData is a Core transaction type that the Celestia node will deal with, and a main way that data will be submitted to Celestia.","slug":"pay-for-data"},{"title":"Peer to peer network","description":"A network in which nodes are connected and can communicate directly with each other without reliance on a third party to facilitate communication.","content":"\r\nA network in which nodes are connected and can communicate directly with each other without reliance on a third party to facilitate communication. Peer-to-peer networks are used in blockchains as a way for nodes to connect and send data between each other, such as transactions and block headers, among other things.","slug":"peer-to-peer-network"},{"title":"PFB","description":"PFB stands for PayforBlob.","content":"\r\nPFB stands for [PayforBlob](https://docs.celestia.org/learn/how-celestia-works/transaction-lifecycle).\r\n","slug":"pfb"},{"title":"Proof of Stake","description":"Proof of Stake is a mechanism that requires blockchain participants to stake a token to participate in consensus.","content":"\r\nProof of Stake is a mechanism that requires blockchain participants to stake a token to participate in consensus. For example, Ethereum requires nodes to stake the ETH token to become a validator. A validator’s stake can be slashed as a way to punish misbehavior.","slug":"proof-of-stake"},{"title":"QGB","description":"QGB stands for Quantum Gravity Bridge.","content":"\r\nQGB stands for [Quantum Gravity Bridge](https://blog.celestia.org/celestiums/).","slug":"qgb"},{"title":"Rollup","description":"A type of blockchain that posts their blocks to a separate chain to receive consensus and ensure data availability.","content":"\r\nA rollup is a type of blockchain that offloads some work to a layer 1, like Celestia. Rollups host applications and process user transactions. Once those transactions get processed, they are then published to layer 1. It’s layer 1s job to order those transactions and check that they are available, at minimum.\r\n\r\nOver time, two primary designs emerged for rollups: [optimistic](https://celestia.org/glossary/optimistic-rollup) and [zk rollups](https://celestia.org/glossary/zk-rollup).\r\n","slug":"rollup"},{"title":"Safety","description":"Safety is a property of blockchains that a chain will not fork.","content":"\r\nSafety is a property of blockchains that a chain will not fork. If there are two conflicting blocks at the same height, then that chain is said to have had a safety failure. Simply put, safety should guarantee that a bad thing never happens.","slug":"safety"},{"title":"Scalability","description":"Scalability is the ability of a blockchain to increase its capacity without an equal increase in the cost to run a node that verifies the chain.","content":"\r\nScalability is the ability of a blockchain to increase its capacity without an equal increase in the cost to run a node that verifies the chain. The key component of scaling is that a blockchain should keep hardware costs minimal while increasing its capacity.","slug":"scalability"},{"title":"Sequencer","description":"A sequencer is a type of rollup node that is responsible for collecting transactions and producing new blocks.","content":"\r\nA sequencer is a type of rollup node that is responsible for collecting transactions and producing new blocks.","slug":"sequencer"},{"title":"Settlement layer","description":"A modular blockchain whose primary role is to provide proof verification and dispute resolution for rollups.","content":"\r\nA settlement layer refers to a modular blockchain whose primary role is to provide proof verification and [dispute resolution](https://celestia.org/glossary/dispute-resolution) for [rollups](https://celestia.org/glossary/rollup). A settlement layer may also provide other features for rollups, such as a liquidity source or bridging hub. 'Settlement layer' may also refer to a monolithic blockchain used by rollups for the function of [settlement](https://celestia.org/glossary/settlement).\r\n","slug":"settlement-layer"},{"title":"Settlement","description":"A function of modular blockchains where transaction proofs from rollups are verified and disputes are resolved.","content":"\r\nSettlement primarily refers to a function of modular blockchains where transaction proofs from rollups are verified and [disputes](https://celestia.org/glossary/dispute-resolution) are resolved. Modular blockchains that specialize in settlement (e.g. [settlement layers](https://celestia.org/glossary/settlement-layer)) may also provide other features, such as a liquidity source or bridging hub.\r\n","slug":"settlement"},{"title":"Sharding","description":"The process of separating a blockchain from a single chain into multiple chains (shards).","content":"\r\nThe process of separating a blockchain from a single chain into multiple chains (shards). Sharding provides scalability to a blockchain as it allows transactions to be executed in parallel so that nodes are only required to process a subset of all transactions.","slug":"sharding"},{"title":"Shared security","description":"Security that a blockchain inherits from an external source.","content":"\r\nSecurity that a blockchain inherits from an external source. This security can come in the forms such as preventing invalid state transitions or re-org attacks. Since security of the external blockchain can be shared, multiple blockchains can derive benefits from harnessing its security.\r\n\r\nFor example, Celestia will provide shared security to blockchains that deploy on it because they will inherit security from the consensus and data availability Celestia provides, which is shared among all chains that will utilize it.\r\n\r\nInterchain security is another example of shared security where security isn’t inherited from the blockchain itself. Rather, the Cosmos Hub validator set will be able to opt-in to become a validator for other zones.","slug":"shared-security"},{"title":"Slashing","description":"A mechanism employed in PoS blockchains that is used to deter and punish malicious behavior.","content":"$12","slug":"slashing"},{"title":"Smart contract","description":"A smart contract is a program that runs on a blockchain.","content":"\r\nA smart contract is a program that runs on a blockchain. Smart contracts are written in programming languages such as Solidity or Rust and are used to create many applications that run on a blockchain, like decentralized exchanges, borrowing and lending protocols, and social media.","slug":"smart-contract"},{"title":"Social consensus","description":"The process by which individuals come to an agreement on a change that will be made to a blockchain.","content":"\r\nSocial consensus is a process where individuals come to agreement on a change that will be made to a blockchain. Changes that require social consensus are typically outside the scope of the consensus protocol, such as governance-led upgrades or responses to attacks and network outages.","slug":"social-consensus"},{"title":"Sovereign application","description":"An application that is deployed on its own sovereign blockchain.","content":"\r\nAn application that is deployed on its own sovereign blockchain. Applications that are deployed to a shared environment with other applications don't retain sovereignty because they are bound by the social consensus of the underlying environment.","slug":"sovereign-application"},{"title":"Sovereign blockchain","description":"A blockchain that has independent control over itself and its applications via social consensus.","content":"\r\nA blockchain that has independent control over itself and its applications via social consensus. A sovereign chain has the ability to respond to hacks and push upgrades.\r\n\r\nIn the context of a modular stack, a modular blockchain can only be considered sovereign if it has the ability to fork through social consensus without the permission of any underlying layers it utilizes. Rollups that utilize a modular stack to retain sovereignty are known as sovereign rollups.","slug":"sovereign-blockchain"},{"title":"Sovereign rollup","description":"A type of rollup that does not use a settlement layer to determine its canonical chain and validity rules.","content":"\r\nA type of rollup that does not use a settlement layer to determine its canonical chain and validity rules. Instead, the canonical chain of the rollup is determined by the nodes in the rollup's peer-to-peer network. This means that settlement occurs on the rollup, rather than a separate settlement layer.\r\n\r\nSovereign rollups have three key benefits:\r\n\r\n1. More freedom over the execution environment\r\n2. No sharing of computation resources\r\n3. Ability to hard fork if something goes wrong\r\n\r\nFor more information on sovereign rollups, view the blog post [Rollups as sovereign chains](https://blog.celestia.org/sovereign-rollup-chains/).\r\n","slug":"sovereign-rollup"},{"title":"State transition fraud proof","description":"A method for proving that a state transition is invalid.","content":"\r\nA method for proving that a state transition is invalid. Optimistic rollups are a type of blockchain that utilize fraud proofs to prove invalid state transitions. Since fraud proofs only assess if fraud took place, they are only required during situations where a state transition is disputed.\r\n\r\nA simple construction of a fraud proof requires nodes to re-execute the transaction(s) that were part of the disputed state transition. However, this can become prohibitively expensive if the blockchain they are being re-executed on has high gas fees. To avoid this, fraud proofs have been constructed that involve interactive verification games (IVGs) that narrow down the disputed state transition to just the key computation step in question, which is then re-executed to assess if it is fraudulent.","slug":"state-transition-fraud-proof"},{"title":"Synchrony assumption","description":"An assumption that the network is synchronous such that when a message is sent it will be received within a certain amount of time.","content":"\r\nAn assumption that the network is synchronous such that when a message is sent it will be received within a certain amount of time.","slug":"synchrony-assumption"},{"title":"The data availability problem","description":"A problem that is concerned with whether the data in the proposed block can be verified that it is available.","content":"\r\nThe problem with data availability occurs when the transaction data for a newly proposed block cannot be downloaded and verified. This type of attack by a block producer is called a [data withholding attack](https://celestia.org/glossary/data-withholding-attack), which sees the block producer withhold transaction data of a new block.\r\n\r\nSince transaction data is withheld, nodes cannot update to the latest state. Such an attack can have numerous consequences, from halting a chain to gaining the ability to steal funds. The severity of the consequences will depend on the type of blockchain (L1 or L2) and whether data availability is kept on-chain or off-chain. The data availability problem commonly arises around L2 scaling solutions like [rollups](https://celestia.org/glossary/rollup) and [validiums](https://celestia.org/glossary/validium).\r\n\r\nRead more about [the data availability problem](https://coinmarketcap.com/alexandria/article/what-is-data-availability/).","slug":"the-data-availability-problem"},{"title":"Throughput","description":"A measurement of the capacity of a blockchain. Throughput primarily measures two elements: data throughput and transaction throughput.","content":"\r\nA measurement of the capacity of a blockchain. Throughput primarily measures two elements: data throughput and transaction throughput. Data throughput determines a blockchain’s data capacity, which is measured in kb/s or mb/s. Data throughput is most relevant to data availability layers because their primary job is to provide a high capacity for data.\r\n\r\nTransaction throughput measures the computational capacity of a blockchain, which is commonly calculated by the number of transactions that can be processed per second (TPS). However, TPS is a subjective measure of throughput as transactions can vary in size. An objective measurement of throughput is the number of computational units that can be performed per second.","slug":"throughput"},{"title":"Transaction throughput","description":"The computational capacity of a blockchain. Transaction throughput is commonly calculated by the number of transactions that can be processed per second (TPS).","content":"\r\nThe computational capacity of a blockchain. Transaction throughput is commonly calculated by the number of transactions that can be processed per second (TPS). However, TPS is a subjective measure of throughput as transactions can vary in size. Therefore, larger transactions will result in lower TPS, and smaller transactions will lead to higher TPS. An objective measurement of throughput is the number of computational units that can be performed per second.\r\n\r\nFor example, consider a blockchain that has a limit of 15M computational units per block with a block time of 10 seconds. The objective throughput of the blockchain would be 1.5M units per second. Additionally, throughput can also be used to measure other parameters of a blockchain, such as data capacity.","slug":"transaction-throughput"},{"title":"Trust minimized bridge","description":"A bridge between two blockchains that doesn’t require an intermediary, a committee, or an honest majority assumption to ensure that funds can’t be stolen.","content":"\r\nA bridge between two blockchains that doesn’t require an intermediary, a committee, or an honest majority assumption to ensure that funds can’t be stolen. An example of a trust-minimized bridge is one between Ethereum and a rollup built on top of it.\r\n\r\nA trust-minimized bridge is more secure than a trusted bridge. For that reason, chains that share trust-minimized bridges with each other can be thought of as a “cluster” or chains.\r\n\r\nRead more about [clusters and bridging](https://blog.celestia.org/clusters/).","slug":"trust-minimized-bridge"},{"title":"Trusted bridge","description":"A bridge between two blockchains that requires either a trusted intermediary, committee, or an honest majority assumption to ensure that funds can’t be stolen.","content":"\r\nA bridge between two blockchains that requires either a trusted intermediary, committee or an honest majority assumption to ensure that funds can’t be stolen. A trusted bridge can be exploited more easily than a trust-minimized bridge because it provides weaker guarantees for its security.\r\n\r\nExamples of trusted bridges are the bridge for WBTC which is run by BitGo, a committee based bridge like Axelar, or the IBC bridge between Osmosis and the Cosmos Hub.\r\n\r\nRead more about [clusters and bridging](https://blog.celestia.org/clusters/).","slug":"trusted-bridge"},{"title":"Validator set","description":"A group of validators that are responsible for directly participating in the consensus of a blockchain through either voting, producing, or proposing blocks.","content":"\r\nA group of validators that are responsible for directly participating in the consensus of a blockchain through either voting, producing, or proposing blocks.","slug":"validator-set"},{"title":"Validator","description":"A full node that is part of the validator set in a PoS blockchain.","content":"\r\nA full node that is part of the validator set in a PoS blockchain. Validators participate in consensus by voting on proposed blocks, and when elected leader they produce and propose blocks to the validator set.","slug":"validator"},{"title":"Validity proof","description":"A type of cryptographic proof that can be used to attest to the validity of a state transition.","content":"\r\nA type of cryptographic proof that can be used to attest to the validity of a state transition. For example, zk-Rollups utilize validity proofs to prove valid state transitions to a parent chain - commonly used with proof systems such as SNARKs and STARKs.","slug":"validity-proof"},{"title":"Validium","description":"A type of zero-knowledge rollup that posts its data off-chain rather than to its parent chain.","content":"\r\nA type of zero-knowledge rollup that posts its data off-chain rather than to its parent chain. The off-chain environment that data is posted to could be a committee of trusted parties or a separate chain, such as Celestia.","slug":"validium"},{"title":"Volition","description":"A zero-knowledge rollup with options for both on-chain and off-chain data availability.","content":"\r\nA zero-knowledge rollup with options for both on-chain and off-chain data availability. Users at the individual transaction level are given the choice to publish data on-chain, to a parent chain, or off-chain, to a separate environment. The off-chain mode acts as a validium, where data is published to a separate environment, which could be to a committee of trusted parties or a data availability chain.","slug":"volition"},{"title":"zk-Rollup","description":"A type of rollup that posts its blocks to a separate chain with a validity proof that attests to the correctness of the block.","content":"\r\nA type of rollup that posts its blocks to a parent chain with a validity proof that attests to the correctness of the block. Since transactions are considered final once the validity proof is verified, there is no dispute window to challenge the zk-Rollup block’s validity.","slug":"zk-rollup"},{"title":"ZKR","description":"ZKR stands for ZK Rollup.","content":"\r\nZKR stands for [ZK Rollup](https://celestia.org/glossary/zk-rollup).\r\n","slug":"zkr"}]}],["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","glossary","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]
10:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Settlement | Celestia"}],["$","meta","3",{"name":"description","content":"A function of modular blockchains where transaction proofs from rollups are verified and disputes are resolved."}],["$","meta","4",{"property":"og:title","content":"Settlement | Celestia"}],["$","meta","5",{"property":"og:description","content":"A function of modular blockchains where transaction proofs from rollups are verified and disputes are resolved."}],["$","meta","6",{"property":"og:image","content":"https://celestia.org//meta/og-image-default.jpg"}],["$","meta","7",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","8",{"name":"twitter:title","content":"Settlement | Celestia"}],["$","meta","9",{"name":"twitter:description","content":"A function of modular blockchains where transaction proofs from rollups are verified and disputes are resolved."}],["$","meta","10",{"name":"twitter:image","content":"https://celestia.org//meta/og-image-default.jpg"}],["$","link","11",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"256x256"}]]
1:null
