name: Deploy to VM

on:
  push:
    branches:
      - gitac

env:
    VM_HOST: ${{ secrets.VM_HOST }}
    CONTAINER_NAME: celestia-web
    IMAGE_NAME: ghcr.io/celestiaorg/celestia.org:latest

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
        contents: write
        packages: write
    
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          # Disable strict host key checking and automatically add host keys
          echo "StrictHostKeyChecking no" >> ~/.ssh/config
          # Add the host key (optional but recommended)
          ssh-keyscan -H ${{ secrets.VM_HOST }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Test SSH Connection
        run: ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ env.VM_HOST }} "echo 'SSH connection successful'"

      - name: Login to GitHub Container Registry on VM
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ env.VM_HOST }} \
          "echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin"

      - name: Deploy to VM
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ env.VM_HOST }} "\
            docker pull ${{ env.IMAGE_NAME }} && \
            docker stop ${{ env.CONTAINER_NAME }} || true && \
            docker rm ${{ env.CONTAINER_NAME }} || true && \
            docker run -d \
              --name ${{ env.CONTAINER_NAME }} \
              --restart unless-stopped \
              -p 3000:3000 \
              -e MAILCHIMP_API_KEY='${{ secrets.MAILCHIMP_API_KEY }}' \
              -e MAILCHIMP_LIST_ID='${{ secrets.MAILCHIMP_LIST_ID }}' \
              -e MAILCHIMP_SERVER_PREFIX='${{ secrets.MAILCHIMP_SERVER_PREFIX }}' \
              -e NEXT_PUBLIC_RECAPTCHA_SITE_KEY='${{ secrets.NEXT_PUBLIC_RECAPTCHA_SITE_KEY }}' \
              -e RECAPTCHA_SECRET_KEY='${{ secrets.RECAPTCHA_SECRET_KEY }}' \
              -e NEXT_PUBLIC_SITE_URL='${{ secrets.NEXT_PUBLIC_SITE_URL }}' \
              -e ENV_MODE='${{ github.event.inputs.environment || 'production' }}' \
              ${{ env.IMAGE_NAME }}"

      - name: Verify Deployment
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ env.VM_HOST }} "\
            if ! docker ps | grep -q ${{ env.CONTAINER_NAME }}; then \
              echo 'Container is not running' && exit 1; \
            fi && \
            echo 'Container is running successfully' && \
            docker logs --tail 50 ${{ env.CONTAINER_NAME }}" 